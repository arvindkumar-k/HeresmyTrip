{"version":3,"sources":["UI/form_dropdown.js","UI/form_DateTime.js","UI/form_location.js","UI/form_TextArea.js","UI/eventInput.js","UI/ItineraryForm.js","App.js","reportWebVitals.js","index.js"],"names":["DropDownFromControl","handleChange","event","props","onSave","target","name","value","Fragment","className","type","this","placeholder","list","onChange","id","dataList","map","item","htmlFor","labelName","altText","Component","format","onChangeDate","date","dateString","setState","selectedDay","_d","onChangeTime","time","timeString","selectedTime","timeField","state","undefined","label","includeTime","defaultValue","moment","SearchBar","autocompleteInput","React","createRef","autocomplete","handlePlaceChanged","bind","google","maps","places","Autocomplete","current","types","addListener","place","getPlace","console","log","onPlaceLoaded","ref","TextAreaFormControl","options","travel","activity","leisure","food","InputEvent","setFormInput","fieldname","inputValue","saveItinerary","callback","typeName","eventType","startDate","endDate","startTime","fromLocation","toLocation","location","activityType","leisureType","travelType","foodType","toUpperCase","includes","dataListName","charAt","slice","length","onClick","ItineraryForm","events","showForm","componentDidMount","hideEntryForm","handleClick","ReactDOM","render","document","getElementById","itinerary","push","unmountComponentAtNode","x","style","display","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.7d4cd5ad.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass DropDownFromControl extends Component {\n  handleChange = (event) => {\n    this.props.onSave(event.target.name, event.target.value);\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"col-xs-12\">\n          <div className=\"form-floating\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name={this.props.name}\n              placeholder=\"Train\"\n              list={this.props.name + \"_datalist\"}\n              onChange={this.handleChange}\n            />\n            <datalist id={this.props.name + \"_datalist\"}>\n              {this.props.dataList.map((item) => {\n                return (\n                  <option key={item} value={item}>\n                    {item}\n                  </option>\n                );\n              })}\n            </datalist>\n            <label htmlFor={this.props.name}>{this.props.labelName}</label>\n            {this.props.altText && (\n              <div id={this.props.name} className=\"form-text\">\n                {this.props.altText}\n              </div>\n            )}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DropDownFromControl;\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\n\nimport { DatePicker, TimePicker } from \"antd\";\nimport \"antd/dist/antd.css\";\nconst format = \"HH:mm\";\n\nclass DropDownFromControl extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedDay: undefined,\n      selectedTime: undefined,\n    };\n  }\n  onChangeDate = (date, dateString) => {\n    this.setState({ selectedDay: date });\n    this.props.onSave(this.props.name, date._d);\n  };\n  onChangeTime = (time, timeString) => {\n    this.setState({ selectedTime: timeString });\n    this.props.onSave(this.props.timeField, timeString);\n  };\n\n  render() {\n    return (\n      <div>\n        <td className=\"col-md-3\">\n          <label htmlFor={this.props.name}>{this.props.labelName}</label>\n        </td>\n        <td className=\"col-md-4\">\n          <DatePicker\n            onChange={this.onChangeDate}\n            placeholder={this.props.label}\n          />\n        </td>\n        <td className=\"col-md-4\">\n          {this.props.includeTime && (\n            <TimePicker\n              onChange={this.onChangeTime}\n              defaultValue={moment(\"00:00\", format)}\n              format={format}\n            />\n          )}\n\n          {/* {this.props.altText && (\n            <div id={this.props.name + \"_altText\"} className=\"form-text\">\n              {this.props.altText}\n            </div>\n          )} */}\n        </td>\n      </div>\n    );\n  }\n}\n\nexport default DropDownFromControl;\n","import React from \"react\";\n/* global google */\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.autocompleteInput = React.createRef();\n    this.autocomplete = null;\n    this.handlePlaceChanged = this.handlePlaceChanged.bind(this);\n  }\n\n  componentDidMount() {\n    this.autocomplete = new google.maps.places.Autocomplete(\n      this.autocompleteInput.current,\n      { types: [\"geocode\"] }\n    );\n\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceChanged);\n  }\n\n  handlePlaceChanged() {\n    const place = this.autocomplete.getPlace();\n    console.log(place);\n    this.props.onPlaceLoaded(this.props.name, place);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"col-xs-12\">\n          <div className=\"form-floating\">\n            <input\n              className=\"form-control\"\n              ref={this.autocompleteInput}\n              id=\"autocompleteLocation\"\n              type=\"text\"\n            ></input>\n            <label htmlFor=\"autocompleteLocation\">{this.props.labelName}</label>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\n\nclass TextAreaFormControl extends Component {\n  state = {};\n\n  handleChange = (event) => {\n    this.props.onSave(event.target.name, event.target.value);\n  };\n  render() {\n    return (\n      <div className=\"col-xs-12\">\n        <div className=\"form-floating\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name={this.props.name}\n            placeholder={this.props.labelName}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor={this.props.name}>{this.props.labelName}</label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TextAreaFormControl;\n","import React, { Component } from \"react\";\nimport DropDownFormControl from \"./form_dropdown\";\nimport DateTimeFormControl from \"./form_DateTime\";\nimport LocationFormControl from \"./form_location\";\nimport TextAreaFormControl from \"./form_TextArea\";\n\nconst options = {\n  travel: [\"Car\", \"Flight\", \"Train\", \"Bus\", \"Bike\", \"Boat\"],\n  activity: [\"Hiking\", \"Trekking\", \"Sight Seeing\", \"Temples\", \"Beach\"],\n  leisure: [\"Rest\", \"Lights Out\", \"Nap\", \"Chilling\"],\n  food: [\"Italian\", \"Spanish\", \"Indian\", \"American\"],\n};\nclass InputEvent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      typeName: props.eventType + \"Type\",\n\n      eventType: props.eventType,\n      startDate: \"\",\n      endDate: \"\",\n      startTime: \"\",\n      fromLocation: {},\n      toLocation: {},\n      location: {},\n      activityType: \"\",\n      leisureType: \"\",\n      travelType: \"\",\n      foodType: \"\",\n    };\n  }\n\n  setFormInput = (fieldname, inputValue) => {\n    this.setState({ [fieldname]: inputValue });\n  };\n\n  saveItinerary = () => {\n    this.props.callback(this.state);\n  };\n\n  render() {\n    return (\n      <div className=\"container container-fluid\">\n        <h3 className=\"text-center\">\n          {this.props.eventType.toUpperCase()} EVENT\n        </h3>\n        <table className=\"table table-responsive\">\n          <tbody>\n            <tr className=\"row\">\n              <td className=\"col-md-6\">\n                {/* From DateTime  */}\n                <DateTimeFormControl\n                  name=\"startDate\"\n                  timeField=\"startTime\"\n                  includeTime={true}\n                  onSave={this.setFormInput}\n                  labelName=\"Start Date\"\n                ></DateTimeFormControl>\n              </td>\n              <td className=\"col-md-6\">\n                {/* To DateTime  */}\n                <DateTimeFormControl\n                  name=\"endDate\"\n                  includeTime={true}\n                  timeField=\"endTime\"\n                  onSave={this.setFormInput}\n                  labelName=\"End Date\"\n                  // altText=\"Enter the end date\"\n                ></DateTimeFormControl>\n              </td>\n            </tr>\n            {/* From Location to Location */}\n            {this.props.eventType === \"travel\" && (\n              <tr className=\"row\">\n                <td className=\"col-md-6\">\n                  <LocationFormControl\n                    labelName=\"To Location\"\n                    name=\"toLocation\"\n                    onPlaceLoaded={this.setFormInput}\n                  />\n                </td>\n\n                <td className=\"col-md-6\">\n                  <LocationFormControl\n                    labelName=\"From Location\"\n                    name=\"fromLocation\"\n                    onPlaceLoaded={this.setFormInput}\n                  />\n                </td>\n              </tr>\n            )}\n            {/* Event Location  */}\n            {[\"leisure\", \"activity\", \"food\"].includes(this.props.eventType) && (\n              <tr className=\"row\">\n                <td className=\"col-md-12\">\n                  <LocationFormControl\n                    labelName=\"Location\"\n                    name=\"location\"\n                    onPlaceLoaded={this.setFormInput}\n                  />\n                </td>\n              </tr>\n            )}\n            <tr className=\"row\">\n              <td className=\"col-md-6\">\n                {/* Mode of Travel */}\n                {this.props.eventType === \"travel\" && (\n                  <DropDownFormControl\n                    name={[this.state.typeName]}\n                    dataList={options[this.props.eventType]}\n                    labelName=\"Mode of Travel\"\n                    dataListName=\"travelTypeDataList\"\n                    onSave={this.setFormInput}\n                    // altText=\"Please enter your mode of Travel\"\n                  />\n                )}\n                {[\"leisure\", \"activity\", \"food\"].includes(\n                  this.props.eventType\n                ) && (\n                  <DropDownFormControl\n                    name={[this.state.typeName]}\n                    dataList={options[this.props.eventType]}\n                    labelName={\n                      this.props.eventType.charAt(0).toUpperCase() +\n                      this.props.eventType.slice(\n                        1,\n                        this.props.eventType.length\n                      ) +\n                      \" Type\"\n                    }\n                    onSave={this.setFormInput}\n                    // altText=\"Please enter your mode of Travel\"\n                  />\n                )}\n              </td>\n\n              <td className=\"col-md-6\">\n                <TextAreaFormControl\n                  name=\"comments\"\n                  onSave={this.setFormInput}\n                  labelName=\"Comments\"\n                ></TextAreaFormControl>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div className=\"text-center \">\n          <button\n            className=\"btn text-white bg-primary btn-lg\"\n            onClick={this.saveItinerary}\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InputEvent;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport EventInput from \"./eventInput\";\n\nclass ItineraryForm extends Component {\n  state = {\n    events: [],\n    showForm: true,\n    eventType: \"travel\",\n  };\n\n  componentDidMount = () => {\n    this.hideEntryForm();\n  };\n\n  hideEntryForm() {\n    let x = document.getElementById(\"showForm\");\n    if (this.state.showForm) {\n      x.style.display = \"block\";\n    } else {\n      x.style.display = \"none\";\n    }\n  }\n  handleClick = (event) => {\n    this.setState(\n      {\n        showForm: !this.state.showForm,\n        eventType: event.target.name,\n      },\n      () => {\n        ReactDOM.render(\n          <EventInput\n            id=\"eventForm\"\n            callback={this.onSave}\n            eventType={this.state.eventType}\n          />,\n          document.getElementById(\"showForm\")\n        );\n      }\n    );\n  };\n  onSave = (itinerary) => {\n    let events = this.state.events;\n    events.push(itinerary);\n    this.setState({ events });\n    ReactDOM.unmountComponentAtNode(document.getElementById(\"showForm\"));\n  };\n  render() {\n    return (\n      <div className=\"form text-center\">\n        <button\n          className=\"btn btn-primary m-2 p-2\"\n          onClick={this.handleClick}\n          name=\"travel\"\n        >\n          Travel\n        </button>\n        <button\n          className=\"btn btn-secondary m-2 p-2\"\n          onClick={this.handleClick}\n          name=\"activity\"\n        >\n          Activity\n        </button>\n        <button\n          className=\"btn btn-warning m-2 p-2\"\n          onClick={this.handleClick}\n          name=\"food\"\n        >\n          Food\n        </button>\n        <button\n          className=\"btn btn-success m-2 p-2\"\n          onClick={this.handleClick}\n          name=\"leisure\"\n        >\n          Leisure\n        </button>\n\n        <div id=\"showForm\"></div>\n      </div>\n    );\n  }\n}\n\nexport default ItineraryForm;\n","import \"./App.css\";\nimport ItineraryForm from \"./UI/ItineraryForm\";\nimport React, { Component } from \"react\";\n\nfunction App() {\n  return (\n    <div className=\"container container-fluid\">\n      <ItineraryForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}